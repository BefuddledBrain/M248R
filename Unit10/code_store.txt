n.lo <- min(count(dop, Diag, sort = TRUE)$n)

# Activity 9: aboriginal village size in Alaska and California
ab.df <- data.frame(
  California  = c(23, 26, 30, 33, 42, 45, 45, 50, 50.5, 96, 113, 557, NA), 
  Alaska      = c(39, 48, 53.5, 55, 57, 66, 77, 79, 108, 121, 162, 197, 309)
)%>% 
  pivot_longer(
    cols = c("Alaska", "California"),
    names_to = "State",
    values_to = "Size",
    values_drop_na = TRUE
  ) %>% 
  mutate(StateRank = rank(Size, ties.method = "average"))

up.down <- as.matrix(count(ab.df, State))
if (as.numeric(up.down[1,2])>as.numeric(up.down[2,2])) {
  ab.df <- arrange(ab.df, desc(State))
} else {
  ab.df <- arrange(ab.df, State)
}

nA <- as.numeric(min(count(ab.df, State, sort = TRUE)$n))
nB <- as.numeric(max(count(ab.df, State, sort = TRUE)$n))
ab.U <- sum(ab.df$StateRank[1:nA])
ab.E <- (nA*(nA+nB+1))/2
ab.V <- (nA*nB*(nA+nB+1))/12
ab.Z <- (ab.U - ab.E)/sqrt(ab.V)
ab.P <- 
  if (ab.Z < 0) {
    (1-round(pnorm(round(abs(ab.Z), 2), mean = 0, sd = 1), 3)) * 2
  } else {
    (round(pnorm(round(ab.Z, 2), mean = 0, sd = 1), 3)) * 2
  }


df <- rbind(df, data.frame(col1 = blah1, col2 = blah2))
# %>% rbind(data.frame(col1 = blah1, col2 = blah2))	# for piped version?
